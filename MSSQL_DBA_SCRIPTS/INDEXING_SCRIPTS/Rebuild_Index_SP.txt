USE [COLINT]
GO
/****** Object:  StoredProcedure [dbo].[Proc_RebuildIndex_COLINT]    Script Date: 9/26/2022 4:14:12 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


ALTER procedure [dbo].[Proc_RebuildIndex_COLINT]
as      
SET NOCOUNT ON;    
DECLARE @objectid int;    
DECLARE @indexid int;    
DECLARE @partitioncount bigint;    
DECLARE @schemaname nvarchar(130);     
DECLARE @objectname nvarchar(130);     
DECLARE @indexname nvarchar(130);     
DECLARE @partitionnum bigint;    
DECLARE @partitions bigint;    
DECLARE @frag float;    
DECLARE @command nvarchar(4000);
DECLARE @Index_Type_Desc nvarchar(130);      
SELECT  
    object_id AS objectid,    
    index_id AS indexid,
      Index_Type_Desc,            
    partition_number AS partitionnum,    
    avg_fragmentation_in_percent AS frag    
INTO #Temp_Rebuild_Index_COLINT  
FROM sys.dm_db_index_physical_stats (DB_ID(), NULL, NULL , NULL, 'LIMITED')    
WHERE avg_fragmentation_in_percent > 10.0 AND index_id > 0 AND page_count >=1000;    
DECLARE partitions CURSOR FOR SELECT * FROM #Temp_Rebuild_Index_COLINT;    
-- Open the cursor.    
OPEN partitions;     
-- Loop through the partitions.    
WHILE (1=1)    
    BEGIN;    
        FETCH NEXT    
           FROM partitions    
           INTO @objectid, @indexid, @Index_Type_Desc, @partitionnum, @frag;    
        IF @@FETCH_STATUS < 0 BREAK;    
        SELECT @objectname = QUOTENAME(o.name), @schemaname = QUOTENAME(s.name)    
        FROM sys.objects AS o    
        JOIN sys.schemas as s ON s.schema_id = o.schema_id    
        WHERE o.object_id = @objectid;    
        SELECT @indexname = QUOTENAME(name)    
        FROM sys.indexes    
        WHERE  object_id = @objectid AND index_id = @indexid;    
        SELECT @partitioncount = count(*)     
        FROM sys.partitions    
        WHERE object_id = @objectid AND index_id = @indexid;    
-- 30 is an arbitrary decision point at which to switch between reorganizing and rebuilding.    
        IF @frag < 30.0  --and @Index_Type_Desc <> 'XML'
           SET @command = N'ALTER INDEX ' + @indexname + N' ON ' + @schemaname + N'.' + @objectname + N' REORGANIZE';    
   --     Else
         --SET @command = N'ALTER INDEX ' + @indexname + N'r OFF ' + @schemaname + N'.' + @objectname + N' REORGANIZE';            
        IF @frag >= 30.0   --and @Index_Type_Desc <> 'XML'  
            SET @command = N'ALTER INDEX ' + @indexname + N' ON ' + @schemaname + N'.' + @objectname + N' REBUILD WITH ( PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, ONLINE = OFF,FILLFACTOR = 80, SORT_IN_TEMPDB = ON,maxdop=4 )'; 
        --Else
        --   SET @command = N'ALTER INDEX ' + @indexname + N' OFF ' + @schemaname + N'.' + @objectname + N' REBUILD'; 
        --IF @partitioncount > 1    
        --    SET @command = @command + N' PARTITION=' + CAST(@partitionnum AS nvarchar(10));    
        EXEC (@command);    
        --PRINT N'Executed: ' + @command;    
    END;    
-- Close and deallocate the cursor.    
CLOSE partitions;    
DEALLOCATE partitions;    
-- Drop the temporary table.    
DROP TABLE #Temp_Rebuild_Index_COLINT; 
SET NOCOUNT OFF


